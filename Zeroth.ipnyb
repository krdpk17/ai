# https://keras.io/
#Example of neural networks using sequential
!pip install -q keras
import keras

from keras.models import Sequential
from keras.layers import Dense

import numpy as np 

from tensorflow.examples.tutorials.mnist import input_data

mnist = input_data.read_data_sets('./', one_hot=True)
x, y = mnist.train.next_batch(20)
x.shape

model = Sequential()
model.add(Dense(100, activation='relu', input_dim=784))
model.add(Dense(10, activation='softmax'))
model.compile(loss='categorical_crossentropy', 
             optimizer='adam',
             metrics=['accuracy'])
def get_batch(dataset, batch_size = 256):
    while (1):
        yield dataset.next_batch(batch_size) 
batch_size = 256
test_gen = get_batch(mnist.test, batch_size)
steps_per_epoch = mnist.test.num_examples// batch_size
model.evaluate_generator(test_gen, steps_per_epoch)

batch_size = 256
data_gen = get_batch(mnist.train, batch_size)
steps_per_epoch = mnist.train.num_examples//batch_size

model.fit_generator(data_gen, steps_per_epoch, epochs=10)
model.evaluate_generator(test_gen, steps_per_epoch)
